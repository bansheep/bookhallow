function cov_2jjuuz2r8h(){var path="C:\\Users\\Owner\\Desktop\\bookhallow\\bookhallow-server\\server.js";var hash="c396984bb93622ca0555f03f2a8e27780682a6ff";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Owner\\Desktop\\bookhallow\\bookhallow-server\\server.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:17},end:{line:2,column:36}},"2":{start:{line:3,column:21},end:{line:3,column:45}},"3":{start:{line:4,column:13},end:{line:4,column:28}},"4":{start:{line:5,column:13},end:{line:5,column:30}},"5":{start:{line:6,column:0},end:{line:6,column:27}},"6":{start:{line:11,column:0},end:{line:14,column:3}},"7":{start:{line:15,column:19},end:{line:15,column:38}},"8":{start:{line:17,column:0},end:{line:19,column:2}},"9":{start:{line:18,column:4},end:{line:18,column:72}},"10":{start:{line:22,column:0},end:{line:25,column:1}},"11":{start:{line:24,column:4},end:{line:24,column:32}},"12":{start:{line:30,column:12},end:{line:30,column:21}},"13":{start:{line:31,column:13},end:{line:31,column:37}},"14":{start:{line:32,column:0},end:{line:32,column:71}},"15":{start:{line:32,column:23},end:{line:32,column:69}},"16":{start:{line:34,column:0},end:{line:34,column:24}},"17":{start:{line:35,column:0},end:{line:35,column:24}},"18":{start:{line:36,column:0},end:{line:39,column:4}},"19":{start:{line:41,column:0},end:{line:41,column:27}},"20":{start:{line:42,column:0},end:{line:42,column:49}},"21":{start:{line:43,column:0},end:{line:43,column:27}},"22":{start:{line:48,column:0},end:{line:48,column:50}},"23":{start:{line:51,column:0},end:{line:53,column:25}},"24":{start:{line:54,column:0},end:{line:57,column:26}},"25":{start:{line:118,column:0},end:{line:118,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:24},end:{line:17,column:25}},loc:{start:{line:17,column:34},end:{line:19,column:1}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:32,column:17},end:{line:32,column:18}},loc:{start:{line:32,column:23},end:{line:32,column:69}},line:32}},branchMap:{"0":{loc:{start:{line:22,column:0},end:{line:25,column:1}},type:"if",locations:[{start:{line:22,column:0},end:{line:25,column:1}},{start:{line:22,column:0},end:{line:25,column:1}}],line:22},"1":{loc:{start:{line:31,column:13},end:{line:31,column:37}},type:"binary-expr",locations:[{start:{line:31,column:13},end:{line:31,column:29}},{start:{line:31,column:33},end:{line:31,column:37}}],line:31}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c396984bb93622ca0555f03f2a8e27780682a6ff"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2jjuuz2r8h=function(){return actualCoverage;};}return actualCoverage;}cov_2jjuuz2r8h();const express=(cov_2jjuuz2r8h().s[0]++,require('express'));const mongoose=(cov_2jjuuz2r8h().s[1]++,require('mongoose'));const cookieParser=(cov_2jjuuz2r8h().s[2]++,require('cookie-parser'));const cors=(cov_2jjuuz2r8h().s[3]++,require("cors"));let config=(cov_2jjuuz2r8h().s[4]++,require('config'));//we load the db location from the JSON files
cov_2jjuuz2r8h().s[5]++;require('dotenv').config();// connect to MongoDB
cov_2jjuuz2r8h().s[6]++;mongoose.connect(config.DBHost,{useNewUrlParser:true,useUnifiedTopology:true});const connection=(cov_2jjuuz2r8h().s[7]++,mongoose.connection);cov_2jjuuz2r8h().s[8]++;connection.once('open',function(){cov_2jjuuz2r8h().f[0]++;cov_2jjuuz2r8h().s[9]++;console.log("MongoDB database connection successfully established.");});//don't show the log when it is test
cov_2jjuuz2r8h().s[10]++;if(config.util.getEnv('NODE_ENV')!=='test'){cov_2jjuuz2r8h().b[0][0]++;cov_2jjuuz2r8h().s[11]++;//use morgan to log at command line
app.use(morgan('combined'));//'combined' outputs the Apache style LOGs
}else{cov_2jjuuz2r8h().b[0][1]++;}// set up server
const app=(cov_2jjuuz2r8h().s[12]++,express());const PORT=(cov_2jjuuz2r8h().s[13]++,(cov_2jjuuz2r8h().b[1][0]++,process.env.PORT)||(cov_2jjuuz2r8h().b[1][1]++,5000));cov_2jjuuz2r8h().s[14]++;app.listen(PORT,()=>{cov_2jjuuz2r8h().f[1]++;cov_2jjuuz2r8h().s[15]++;return console.log('Server started on port: '+PORT);});cov_2jjuuz2r8h().s[16]++;app.use(express.json());cov_2jjuuz2r8h().s[17]++;app.use(cookieParser());cov_2jjuuz2r8h().s[18]++;app.use(cors({origin:["http://localhost:3000"],credentials:true}));cov_2jjuuz2r8h().s[19]++;app.use(bodyParser.json());cov_2jjuuz2r8h().s[20]++;app.use(bodyParser.urlencoded({extended:true}));cov_2jjuuz2r8h().s[21]++;app.use(bodyParser.text());// set up routes
cov_2jjuuz2r8h().s[22]++;app.use("/auth",require("./routers/userRouter"));//app.use("/book", require("./routers/bookRouter"));
cov_2jjuuz2r8h().s[23]++;app.route("/book").get(book.getBooks).post(book.postBook);cov_2jjuuz2r8h().s[24]++;app.route("/book/:id").get(book.getBook).delete(book.deleteBook).put(book.updateBook);// const mongoose = require('mongoose');
// const cors = require('cors');
// const bodyParser = require('body-parser');
//
//
// const userRoutes = express.Router();
//
// let User = require('./models/User');
//
// //import routes
// const authRoutes = require('./routes/auth');
//
//
//
// //middewares
// app.use(bodyParser.json());
//
// app.use(cors());
//
// //routes middleware////
// app.use('/', authRoutes);
//
// app.route("/books") // Get route that fetches all bookSchema
//   .get(function(req, res) {
//     Book.find(function(err, foundBooks) {
//       if (err) {
//         res.send(err);
//       } else {
//         res.send(foundBooks);
//       }
//     });
// });
//
// app.route("/addAccount")
// .post(function(req,res){
//   let user = new User(req.body);
//
//   user.save()
//       .then(user => {
//         res.status(200).json({'user': 'user added successfully'})
//       })
//       .catch(err=> {
//         res.status(400).send('adding new user failed');
//       });
// });
//
// app.route('/').get(function(req, res){
//     User.find(function(err, users){
//         if(err){
//             console.log(err);
//         }else{
//             res.json(users);
//         }
//     });
// });
cov_2jjuuz2r8h().s[25]++;module.exports=app;// for testing
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm1vbmdvb3NlIiwiY29va2llUGFyc2VyIiwiY29ycyIsImNvbmZpZyIsImNvbm5lY3QiLCJEQkhvc3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJjb25uZWN0aW9uIiwib25jZSIsImNvbnNvbGUiLCJsb2ciLCJ1dGlsIiwiZ2V0RW52IiwiYXBwIiwidXNlIiwibW9yZ2FuIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJsaXN0ZW4iLCJqc29uIiwib3JpZ2luIiwiY3JlZGVudGlhbHMiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwidGV4dCIsInJvdXRlIiwiZ2V0IiwiYm9vayIsImdldEJvb2tzIiwicG9zdCIsInBvc3RCb29rIiwiZ2V0Qm9vayIsImRlbGV0ZSIsImRlbGV0ZUJvb2siLCJwdXQiLCJ1cGRhdGVCb29rIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Iis0RkFlWTsyRkFmWixLQUFNQSxDQUFBQSxPQUFPLDBCQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFWLENBQWIsQ0FDQSxLQUFNQyxDQUFBQSxRQUFRLDBCQUFHRCxPQUFPLENBQUMsVUFBRCxDQUFWLENBQWQsQ0FDQSxLQUFNRSxDQUFBQSxZQUFZLDBCQUFHRixPQUFPLENBQUMsZUFBRCxDQUFWLENBQWxCLENBQ0EsS0FBTUcsQ0FBQUEsSUFBSSwwQkFBR0gsT0FBTyxDQUFDLE1BQUQsQ0FBVixDQUFWLENBQ0EsR0FBSUksQ0FBQUEsTUFBTSwwQkFBR0osT0FBTyxDQUFDLFFBQUQsQ0FBVixDQUFWLENBQWdDO3dCQUNoQ0EsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkksTUFBbEIsR0FJQTt3QkFDQUgsUUFBUSxDQUFDSSxPQUFULENBQWlCRCxNQUFNLENBQUNFLE1BQXhCLENBQWdDLENBQzlCQyxlQUFlLENBQUUsSUFEYSxDQUU5QkMsa0JBQWtCLENBQUUsSUFGVSxDQUFoQyxFQUlBLEtBQU1DLENBQUFBLFVBQVUsMEJBQUdSLFFBQVEsQ0FBQ1EsVUFBWixDQUFoQixDLHdCQUVBQSxVQUFVLENBQUNDLElBQVgsQ0FBZ0IsTUFBaEIsQ0FBd0IsVUFBVSxpREFDOUJDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHVEQUFaLEVBQ0gsQ0FGRCxFQUlBO3lCQUNBLEdBQUdSLE1BQU0sQ0FBQ1MsSUFBUCxDQUFZQyxNQUFaLENBQW1CLFVBQW5CLElBQW1DLE1BQXRDLENBQThDLHFEQUMxQztBQUNBQyxHQUFHLENBQUNDLEdBQUosQ0FBUUMsTUFBTSxDQUFDLFVBQUQsQ0FBZCxFQUE2QjtBQUNoQyxDQUhELGlDQU9BO0FBQ0EsS0FBTUYsQ0FBQUEsR0FBRywyQkFBR2hCLE9BQU8sRUFBVixDQUFULENBQ0EsS0FBTW1CLENBQUFBLElBQUksMkJBQUcsNEJBQUFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFaLCtCQUFvQixJQUFwQixDQUFILENBQVYsQyx5QkFDQUgsR0FBRyxDQUFDTSxNQUFKLENBQVdILElBQVgsQ0FBaUIsSUFBTSx3REFBQVAsQ0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQTZCTSxJQUF6QyxFQUE4QyxDQUFyRSxFLHlCQUVBSCxHQUFHLENBQUNDLEdBQUosQ0FBUWpCLE9BQU8sQ0FBQ3VCLElBQVIsRUFBUixFLHlCQUNBUCxHQUFHLENBQUNDLEdBQUosQ0FBUWQsWUFBWSxFQUFwQixFLHlCQUNBYSxHQUFHLENBQUNDLEdBQUosQ0FBUWIsSUFBSSxDQUFDLENBQ1hvQixNQUFNLENBQUUsQ0FBQyx1QkFBRCxDQURHLENBRVhDLFdBQVcsQ0FBRSxJQUZGLENBQUQsQ0FBWixFLHlCQUtBVCxHQUFHLENBQUNDLEdBQUosQ0FBUVMsVUFBVSxDQUFDSCxJQUFYLEVBQVIsRSx5QkFDQVAsR0FBRyxDQUFDQyxHQUFKLENBQVFTLFVBQVUsQ0FBQ0MsVUFBWCxDQUFzQixDQUFDQyxRQUFRLENBQUUsSUFBWCxDQUF0QixDQUFSLEUseUJBQ0FaLEdBQUcsQ0FBQ0MsR0FBSixDQUFRUyxVQUFVLENBQUNHLElBQVgsRUFBUixFQUlBO3lCQUNBYixHQUFHLENBQUNDLEdBQUosQ0FBUSxPQUFSLENBQWlCaEIsT0FBTyxDQUFDLHNCQUFELENBQXhCLEVBQ0E7eUJBRUFlLEdBQUcsQ0FBQ2MsS0FBSixDQUFVLE9BQVYsRUFDS0MsR0FETCxDQUNTQyxJQUFJLENBQUNDLFFBRGQsRUFFS0MsSUFGTCxDQUVVRixJQUFJLENBQUNHLFFBRmYsRSx5QkFHQW5CLEdBQUcsQ0FBQ2MsS0FBSixDQUFVLFdBQVYsRUFDS0MsR0FETCxDQUNTQyxJQUFJLENBQUNJLE9BRGQsRUFFS0MsTUFGTCxDQUVZTCxJQUFJLENBQUNNLFVBRmpCLEVBR0tDLEdBSEwsQ0FHU1AsSUFBSSxDQUFDUSxVQUhkLEVBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7eUJBR0FDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQjFCLEdBQWpCLENBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBjb29raWVQYXJzZXIgPSByZXF1aXJlKCdjb29raWUtcGFyc2VyJyk7XHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKFwiY29yc1wiKTtcclxubGV0IGNvbmZpZyA9IHJlcXVpcmUoJ2NvbmZpZycpOyAvL3dlIGxvYWQgdGhlIGRiIGxvY2F0aW9uIGZyb20gdGhlIEpTT04gZmlsZXNcclxucmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7XHJcblxyXG5cclxuXHJcbi8vIGNvbm5lY3QgdG8gTW9uZ29EQlxyXG5tb25nb29zZS5jb25uZWN0KGNvbmZpZy5EQkhvc3QsIHtcclxuICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXHJcbiAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlXHJcbn0pO1xyXG5jb25zdCBjb25uZWN0aW9uID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcclxuXHJcbmNvbm5lY3Rpb24ub25jZSgnb3BlbicsIGZ1bmN0aW9uKCl7XHJcbiAgICBjb25zb2xlLmxvZyhcIk1vbmdvREIgZGF0YWJhc2UgY29ubmVjdGlvbiBzdWNjZXNzZnVsbHkgZXN0YWJsaXNoZWQuXCIpXHJcbn0pXHJcblxyXG4vL2Rvbid0IHNob3cgdGhlIGxvZyB3aGVuIGl0IGlzIHRlc3RcclxuaWYoY29uZmlnLnV0aWwuZ2V0RW52KCdOT0RFX0VOVicpICE9PSAndGVzdCcpIHtcclxuICAgIC8vdXNlIG1vcmdhbiB0byBsb2cgYXQgY29tbWFuZCBsaW5lXHJcbiAgICBhcHAudXNlKG1vcmdhbignY29tYmluZWQnKSk7IC8vJ2NvbWJpbmVkJyBvdXRwdXRzIHRoZSBBcGFjaGUgc3R5bGUgTE9Hc1xyXG59XHJcblxyXG5cclxuXHJcbi8vIHNldCB1cCBzZXJ2ZXJcclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA1MDAwO1xyXG5hcHAubGlzdGVuKFBPUlQsICgpID0+IGNvbnNvbGUubG9nKCdTZXJ2ZXIgc3RhcnRlZCBvbiBwb3J0OiAnICsgUE9SVCkpO1xyXG5cclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xyXG5hcHAudXNlKGNvcnMoe1xyXG4gIG9yaWdpbjogW1wiaHR0cDovL2xvY2FsaG9zdDozMDAwXCJdLFxyXG4gIGNyZWRlbnRpYWxzOiB0cnVlXHJcbn0pKTtcclxuXHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6IHRydWV9KSk7XHJcbmFwcC51c2UoYm9keVBhcnNlci50ZXh0KCkpO1xyXG5cclxuXHJcblxyXG4vLyBzZXQgdXAgcm91dGVzXHJcbmFwcC51c2UoXCIvYXV0aFwiLCByZXF1aXJlKFwiLi9yb3V0ZXJzL3VzZXJSb3V0ZXJcIikpO1xyXG4vL2FwcC51c2UoXCIvYm9va1wiLCByZXF1aXJlKFwiLi9yb3V0ZXJzL2Jvb2tSb3V0ZXJcIikpO1xyXG5cclxuYXBwLnJvdXRlKFwiL2Jvb2tcIilcclxuICAgIC5nZXQoYm9vay5nZXRCb29rcylcclxuICAgIC5wb3N0KGJvb2sucG9zdEJvb2spO1xyXG5hcHAucm91dGUoXCIvYm9vay86aWRcIilcclxuICAgIC5nZXQoYm9vay5nZXRCb29rKVxyXG4gICAgLmRlbGV0ZShib29rLmRlbGV0ZUJvb2spXHJcbiAgICAucHV0KGJvb2sudXBkYXRlQm9vayk7XHJcblxyXG4vLyBjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XHJcbi8vIGNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJyk7XHJcbi8vIGNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xyXG4vL1xyXG4vL1xyXG4vLyBjb25zdCB1c2VyUm91dGVzID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuLy9cclxuLy8gbGV0IFVzZXIgPSByZXF1aXJlKCcuL21vZGVscy9Vc2VyJyk7XHJcbi8vXHJcbi8vIC8vaW1wb3J0IHJvdXRlc1xyXG4vLyBjb25zdCBhdXRoUm91dGVzID0gcmVxdWlyZSgnLi9yb3V0ZXMvYXV0aCcpO1xyXG4vL1xyXG5cclxuLy9cclxuXHJcbi8vXHJcbi8vIC8vbWlkZGV3YXJlc1xyXG4vLyBhcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuLy9cclxuLy8gYXBwLnVzZShjb3JzKCkpO1xyXG4vL1xyXG4vLyAvL3JvdXRlcyBtaWRkbGV3YXJlLy8vL1xyXG4vLyBhcHAudXNlKCcvJywgYXV0aFJvdXRlcyk7XHJcbi8vXHJcbi8vIGFwcC5yb3V0ZShcIi9ib29rc1wiKSAvLyBHZXQgcm91dGUgdGhhdCBmZXRjaGVzIGFsbCBib29rU2NoZW1hXHJcbi8vICAgLmdldChmdW5jdGlvbihyZXEsIHJlcykge1xyXG4vLyAgICAgQm9vay5maW5kKGZ1bmN0aW9uKGVyciwgZm91bmRCb29rcykge1xyXG4vLyAgICAgICBpZiAoZXJyKSB7XHJcbi8vICAgICAgICAgcmVzLnNlbmQoZXJyKTtcclxuLy8gICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICByZXMuc2VuZChmb3VuZEJvb2tzKTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgfSk7XHJcbi8vIH0pO1xyXG4vL1xyXG4vLyBhcHAucm91dGUoXCIvYWRkQWNjb3VudFwiKVxyXG4vLyAucG9zdChmdW5jdGlvbihyZXEscmVzKXtcclxuLy8gICBsZXQgdXNlciA9IG5ldyBVc2VyKHJlcS5ib2R5KTtcclxuLy9cclxuLy8gICB1c2VyLnNhdmUoKVxyXG4vLyAgICAgICAudGhlbih1c2VyID0+IHtcclxuLy8gICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7J3VzZXInOiAndXNlciBhZGRlZCBzdWNjZXNzZnVsbHknfSlcclxuLy8gICAgICAgfSlcclxuLy8gICAgICAgLmNhdGNoKGVycj0+IHtcclxuLy8gICAgICAgICByZXMuc3RhdHVzKDQwMCkuc2VuZCgnYWRkaW5nIG5ldyB1c2VyIGZhaWxlZCcpO1xyXG4vLyAgICAgICB9KTtcclxuLy8gfSk7XHJcbi8vXHJcbi8vIGFwcC5yb3V0ZSgnLycpLmdldChmdW5jdGlvbihyZXEsIHJlcyl7XHJcbi8vICAgICBVc2VyLmZpbmQoZnVuY3Rpb24oZXJyLCB1c2Vycyl7XHJcbi8vICAgICAgICAgaWYoZXJyKXtcclxuLy8gICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuLy8gICAgICAgICB9ZWxzZXtcclxuLy8gICAgICAgICAgICAgcmVzLmpzb24odXNlcnMpO1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgIH0pO1xyXG4vLyB9KTtcclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDsgLy8gZm9yIHRlc3RpbmdcclxuIl19